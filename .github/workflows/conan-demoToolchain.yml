######################################################################
# conan-demoToolchain.yml
#
# Copyright Â© 2025 David L. Armstrong
#
# This workflow calls the conan-multiPlatformToolchain.yml workflow
# for our demo toolchain.
#
# For more information see:
# - https://github.com/DaverSomethingSomethingOrg/conan-github-workflows
#

name: Demo MultiPhase GCC Compiler Bootstrap Build
on:
  workflow_dispatch:
    inputs:
      runner_selection-aarch64:
        type: string
        default: linux-aarch64
      runner_selection-x86_64:
        type: string
        default: linux-x86_64
      conan_center_proxy:
        type: string
      conan_local_recipes:
        type: string
        default: "demos/gcc-toolchain/gcc-toolchain-recipes"
      conan_local_repo:
        type: string
        default: "http://nexus.homelab/repository/conan-homelab/"
      toolchain_prefix:
        type: string
        default: "/opt/toolchain"
      ubuntu-aarch64-enabled:
        type: boolean
        default: false
      ubuntu-x86_64-enabled:
        type: boolean
        default: false
      almalinux-aarch64-enabled:
        type: boolean
        default: false
      almalinux-x86_64-enabled:
        type: boolean
        default: false

jobs:
  trigger_bootstrap_container_image:
    runs-on: ${{ inputs.runner_selection-x86_64 }}
#    container:
#      image: "nexus.homelab/conan-build-ubuntu:aarch64-latest"
#      credentials:
##        username: ${{ github.actor }}
##        password: ${{ secrets.GITHUB_TOKEN }}
#        username: ${{ vars.NEXUS_CI_USER }}
#        password: ${{ secrets.NEXUS_CI_PASSWORD }
    steps:
    - name: Trigger Conan Bootstrap Container Builds
#      if: ${{ inputs.trigger_container_builds }}
      uses: the-actions-org/workflow-dispatch@v4
      with:
        wait-for-completion: true
        token: ${{ secrets.MY_GH_TOKEN }}
        workflow: conan-build-container.yml
        repo: DaverSomethingSomethingOrg/conan-build-container
        ref: main
        inputs: |
          { "enable_build_images": false,
            "container_push": true,
            "almalinux-aarch64-enabled": "${{ inputs.almalinux-aarch64-enabled }}",
            "almalinux-x86_64-enabled": "${{ inputs.almalinux-x86_64-enabled }}",
            "ubuntu-aarch64-enabled": "${{ inputs.ubuntu-aarch64-enabled }}",
            "ubuntu-x86_64-enabled": "${{ inputs.ubuntu-x86_64-enabled }}",
            "runner_selection-aarch64": "${{ inputs.runner_selection-aarch64 }}",
            "runner_selection-x86_64": "${{ inputs.runner_selection-x86_64 }}"
          }

#      env:
#        GH_TOKEN: ${{ secrets.MY_GH_TOKEN }}
#      run: |
#        gh workflow run \
#          --raw-field "enable_build_images=false" \
#          --raw-field "container_push=true" \
#          --raw-field "almalinux-aarch64-enabled=${{ inputs.almalinux-aarch64-enabled }}" \
#          --raw-field "almalinux-x86_64-enabled=${{ inputs.almalinux-x86_64-enabled }}" \
#          --raw-field "ubuntu-aarch64-enabled=${{ inputs.ubuntu-aarch64-enabled }}" \
#          --raw-field "ubuntu-x86_64-enabled=${{ inputs.ubuntu-x86_64-enabled }}" \
#          --raw-field "runner_selection-aarch64=${{ inputs.runner_selection-aarch64 }}" \
#          --raw-field "runner_selection-x86_64=${{ inputs.runner_selection-x86_64 }}" \
#          --repo "DaverSomethingSomethingOrg/conan-build-container" \
#          --ref "main" \
#          conan-build-container.yml

  toolchain_phase1:
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/conan-multiPlatformToolchain.yml@main
    secrets: inherit
    needs: trigger_bootstrap_container_image
    with:
      component_subdirectory: "demos/gcc-toolchain/phase1"
      save_cache_prefix: "toolchain_phase1-${{ github.run_id }}"
      runner_selection-aarch64: ${{ inputs.runner_selection-aarch64 }}
      runner_selection-x86_64: ${{ inputs.runner_selection-x86_64 }}
      conan_center_proxy: ${{ inputs.conan_center_proxy }}
      conan_local_repo: ${{ inputs.conan_local_repo }}
      conan_local_recipes: ${{ inputs.conan_local_recipes }}
      toolchain_prefix: ${{ inputs.toolchain_prefix }}
      ubuntu-aarch64-enabled: "${{ inputs.ubuntu-aarch64-enabled }}"
      ubuntu-aarch64-image: "nexus.homelab/conan-bootstrap-ubuntu:aarch64-latest"
      ubuntu-x86_64-enabled: ${{ inputs.ubuntu-x86_64-enabled }}
      ubuntu-x86_64-image: "nexus.homelab/conan-bootstrap-ubuntu:x86_64-latest"
      almalinux-aarch64-enabled: "${{ inputs.almalinux-aarch64-enabled }}"
      almalinux-aarch64-image: "nexus.homelab/conan-bootstrap-almalinux:aarch64-latest"
      almalinux-x86_64-enabled: ${{ inputs.almalinux-x86_64-enabled }}
      almalinux-x86_64-image: "nexus.homelab/conan-bootstrap-almalinux:x86_64-latest"

  toolchain_phase2:
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/conan-multiPlatformToolchain.yml@main
    secrets: inherit
    needs: toolchain_phase1
    with:
      component_subdirectory: "demos/gcc-toolchain/phase2"
      restore_cache_prefix: "toolchain_phase1-${{ github.run_id }}"
      save_cache_prefix: "toolchain_phase2-${{ github.run_id }}"
      runner_selection-aarch64: ${{ inputs.runner_selection-aarch64 }}
      runner_selection-x86_64: ${{ inputs.runner_selection-x86_64 }}
      conan_center_proxy: ${{ inputs.conan_center_proxy }}
      conan_local_repo: ${{ inputs.conan_local_repo }}
      conan_local_recipes: ${{ inputs.conan_local_recipes }}
      toolchain_prefix: ${{ inputs.toolchain_prefix }}
      ubuntu-aarch64-enabled: "${{ inputs.ubuntu-aarch64-enabled }}"
      ubuntu-aarch64-image: "nexus.homelab/conan-bootstrap-ubuntu:aarch64-latest"
      ubuntu-x86_64-enabled: ${{ inputs.ubuntu-x86_64-enabled }}
      ubuntu-x86_64-image: "nexus.homelab/conan-bootstrap-ubuntu:x86_64-latest"
      almalinux-aarch64-enabled: "${{ inputs.almalinux-aarch64-enabled }}"
      almalinux-aarch64-image: "nexus.homelab/conan-bootstrap-almalinux:aarch64-latest"
      almalinux-x86_64-enabled: ${{ inputs.almalinux-x86_64-enabled }}
      almalinux-x86_64-image: "nexus.homelab/conan-bootstrap-almalinux:x86_64-latest"

  toolchain_phase3:
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/conan-multiPlatformToolchain.yml@main
    secrets: inherit
    needs: toolchain_phase2
    with:
      upload_packages: true
      component_subdirectory: "demos/gcc-toolchain/phase3"
      restore_cache_prefix: "toolchain_phase2-${{ github.run_id }}"
      save_cache_prefix: "toolchain_phase3-${{ github.run_id }}"
      runner_selection-aarch64: ${{ inputs.runner_selection-aarch64 }}
      runner_selection-x86_64: ${{ inputs.runner_selection-x86_64 }}
      conan_center_proxy: ${{ inputs.conan_center_proxy }}
      conan_local_repo: ${{ inputs.conan_local_repo }}
      conan_local_recipes: ${{ inputs.conan_local_recipes }}
      toolchain_prefix: ${{ inputs.toolchain_prefix }}
      ubuntu-aarch64-enabled: "${{ inputs.ubuntu-aarch64-enabled }}"
      ubuntu-aarch64-image: "nexus.homelab/conan-base-ubuntu:aarch64-latest"
      ubuntu-x86_64-enabled: ${{ inputs.ubuntu-x86_64-enabled }}
      ubuntu-x86_64-image: "nexus.homelab/conan-base-ubuntu:x86_64-latest"
      almalinux-aarch64-enabled: "${{ inputs.almalinux-aarch64-enabled }}"
      almalinux-aarch64-image: "nexus.homelab/conan-base-almalinux:aarch64-latest"
      almalinux-x86_64-enabled: ${{ inputs.almalinux-x86_64-enabled }}
      almalinux-x86_64-image: "nexus.homelab/conan-base-almalinux:x86_64-latest"

  trigger_build_container_image:
    needs: toolchain_phase3
    runs-on: ${{ inputs.runner_selection-x86_64 }}
#    container:
#      image: "nexus.homelab/conan-build-ubuntu:aarch64-latest"
#      credentials:
##        username: ${{ github.actor }}
##        password: ${{ secrets.GITHUB_TOKEN }}
#        username: ${{ vars.NEXUS_CI_USER }}
#        password: ${{ secrets.NEXUS_CI_PASSWORD }
    steps:
    - name: Trigger Conan Build Container Builds
#      if: ${{ inputs.trigger_container_builds }}
      uses: the-actions-org/workflow-dispatch@v4
      with:
        wait-for-completion: true
        token: ${{ secrets.MY_GH_TOKEN }}
        workflow: conan-build-container.yml
        repo: DaverSomethingSomethingOrg/conan-build-container
        ref: main
        inputs: |
          { "enable_build_images": true,
            "container_push": true,
            "almalinux-aarch64-enabled": "${{ inputs.almalinux-aarch64-enabled }}",
            "almalinux-x86_64-enabled": "${{ inputs.almalinux-x86_64-enabled }}",
            "ubuntu-aarch64-enabled": "${{ inputs.ubuntu-aarch64-enabled }}",
            "ubuntu-x86_64-enabled": "${{ inputs.ubuntu-x86_64-enabled }}",
            "runner_selection-aarch64": "${{ inputs.runner_selection-aarch64 }}",
            "runner_selection-x86_64": "${{ inputs.runner_selection-x86_64 }}"
          }

#      env:
#        GH_TOKEN: ${{ secrets.MY_GH_TOKEN }}
#      run: |
#        gh workflow run \
#          --raw-field "enable_build_images=true" \
#          --raw-field "container_push=true" \
#          --raw-field "almalinux-aarch64-enabled=${{ inputs.almalinux-aarch64-enabled }}" \
#          --raw-field "almalinux-x86_64-enabled=${{ inputs.almalinux-x86_64-enabled }}" \
#          --raw-field "ubuntu-aarch64-enabled=${{ inputs.ubuntu-aarch64-enabled }}" \
#          --raw-field "ubuntu-x86_64-enabled=${{ inputs.ubuntu-x86_64-enabled }}" \
#          --raw-field "runner_selection-aarch64=${{ inputs.runner_selection-aarch64 }}" \
#          --raw-field "runner_selection-x86_64=${{ inputs.runner_selection-x86_64 }}" \
#          --repo "DaverSomethingSomethingOrg/conan-build-container" \
#          --ref "main" \
#          conan-build-container.yml
