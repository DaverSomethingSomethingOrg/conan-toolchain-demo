######################################################################
# conan-build-container.yml
#
# Copyright Â© 2025 David L. Armstrong
#

name: Conan C/C++ toolchain build container

on:
  workflow_dispatch:
    inputs:
      enable_build_images:
        type: boolean
        default: true
      almalinux-aarch64-enabled:
        type: boolean
        default: false
      almalinux-x86_64-enabled:
        type: boolean
        default: false
      ubuntu-aarch64-enabled:
        type: boolean
        default: false
      ubuntu-x86_64-enabled:
        type: boolean
        default: false
      container_push:
        type: boolean
        default: false
      runner_selection-aarch64:
        type: string
        default: linux-aarch64
      runner_selection-x86_64:
        type: string
        default: linux-x86_64

jobs:
  conan-base:
    name: conan-base-${{ matrix.os_name }}:${{ matrix.arch }}-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - image_tag: "nexus.homelab/conan-base-almalinux:aarch64-latest"
            is_enabled: ${{ inputs.almalinux-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-base-almalinux:x86_64-latest"
            is_enabled: ${{ inputs.almalinux-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-base-ubuntu:aarch64-latest"
            is_enabled: ${{ inputs.ubuntu-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
          - image_tag: "nexus.homelab/conan-base-ubuntu:x86_64-latest"
            is_enabled: ${{ inputs.ubuntu-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/docker-singlePlatform.yml@main
    with:
      is_enabled: ${{ matrix.is_enabled }}
      runner_selection: ${{ matrix.runner_selection }}
      toolchain_prefix: '/opt/toolchain'
      build_target: 'conan-base'
      image_tag: ${{ matrix.image_tag }}
      docker_context: ${{ matrix.docker_context }}
      package_prefix: ${{ matrix.package_prefix }}
      container_registry: ${{ vars.NEXUS_REGISTRY }}
      container_username: ${{ vars.NEXUS_CI_USER }}
      container_push: ${{ inputs.container_push }}
      python_requirements: "demos/gcc-toolchain/conan-build-container/src/requirements.txt"
    secrets:
      container_password: ${{ secrets.NEXUS_CI_PASSWORD }}
      install_keyring: ${{ secrets.NEXUS_APT_KEYRING }}
      install_ca: ${{ secrets.NEXUS_INTERNAL_CA }}

  conan-bootstrap:
    name: conan-bootstrap-${{ matrix.os_name }}:${{ matrix.arch }}-latest
    needs: conan-base
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - image_tag: "nexus.homelab/conan-bootstrap-almalinux:aarch64-latest"
            is_enabled: ${{ inputs.almalinux-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-bootstrap-almalinux:x86_64-latest"
            is_enabled: ${{ inputs.almalinux-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-bootstrap-ubuntu:aarch64-latest"
            is_enabled: ${{ inputs.ubuntu-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
          - image_tag: "nexus.homelab/conan-bootstrap-ubuntu:x86_64-latest"
            is_enabled: ${{ inputs.ubuntu-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/docker-singlePlatform.yml@main
    with:
      is_enabled: ${{ matrix.is_enabled }}
      runner_selection: ${{ matrix.runner_selection }}
      toolchain_prefix: '/opt/toolchain'
      build_target: 'conan-bootstrap'
      image_tag: ${{ matrix.image_tag }}
      docker_context: ${{ matrix.docker_context }}
      package_prefix: ${{ matrix.package_prefix }}
      container_registry: ${{ vars.NEXUS_REGISTRY }}
      container_username: ${{ vars.NEXUS_CI_USER }}
      container_push: ${{ inputs.container_push }}
      python_requirements: "demos/gcc-toolchain/conan-build-container/src/requirements.txt"
    secrets:
      container_password: ${{ secrets.NEXUS_CI_PASSWORD }}
      install_keyring: ${{ secrets.NEXUS_APT_KEYRING }}
      install_ca: ${{ secrets.NEXUS_INTERNAL_CA }}

  conan-build:
    name: conan-build-${{ matrix.os_name }}:${{ matrix.arch }}-latest
    if: ${{ inputs.enable_build_images }}
    needs: conan-bootstrap
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - image_tag: "nexus.homelab/conan-build-almalinux:aarch64-latest"
            is_enabled: ${{ inputs.almalinux-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-build-almalinux:x86_64-latest"
            is_enabled: ${{ inputs.almalinux-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-build-ubuntu:aarch64-latest"
            is_enabled: ${{ inputs.ubuntu-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
          - image_tag: "nexus.homelab/conan-build-ubuntu:x86_64-latest"
            is_enabled: ${{ inputs.ubuntu-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/docker-singlePlatform.yml@main
    with:
      is_enabled: ${{ matrix.is_enabled }}
      runner_selection: ${{ matrix.runner_selection }}
      toolchain_prefix: '/opt/toolchain'
      build_target: 'conan-build'
      image_tag: ${{ matrix.image_tag }}
      docker_context: ${{ matrix.docker_context }}
      package_prefix: ${{ matrix.package_prefix }}
      container_registry: ${{ vars.NEXUS_REGISTRY }}
      container_username: ${{ vars.NEXUS_CI_USER }}
      container_push: ${{ inputs.container_push }}
      python_requirements: "demos/gcc-toolchain/conan-build-container/src/requirements.txt"
    secrets:
      container_password: ${{ secrets.NEXUS_CI_PASSWORD }}
      install_keyring: ${{ secrets.NEXUS_APT_KEYRING }}
      install_ca: ${{ secrets.NEXUS_INTERNAL_CA }}
 
  conan-docker-build:
    name: conan-docker-build-${{ matrix.os_name }}:${{ matrix.arch }}-latest
    if: ${{ inputs.enable_build_images }}
    needs: conan-build
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - image_tag: "nexus.homelab/conan-docker-build-almalinux:aarch64-latest"
            is_enabled: ${{ inputs.almalinux-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-docker-build-almalinux:x86_64-latest"
            is_enabled: ${{ inputs.almalinux-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/almalinux"
            package_prefix: 'opt-toolchain-'
          - image_tag: "nexus.homelab/conan-docker-build-ubuntu:aarch64-latest"
            is_enabled: ${{ inputs.ubuntu-aarch64-enabled }}
            runner_selection: ${{ inputs.runner_selection-aarch64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
          - image_tag: "nexus.homelab/conan-docker-build-ubuntu:x86_64-latest"
            is_enabled: ${{ inputs.ubuntu-x86_64-enabled }}
            runner_selection: ${{ inputs.runner_selection-x86_64 }}
            docker_context: "demos/gcc-toolchain/conan-build-container/src/ubuntu"
            package_prefix: 'opt+toolchain-'
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/docker-singlePlatform.yml@main
    with:
      is_enabled: ${{ matrix.is_enabled }}
      runner_selection: ${{ matrix.runner_selection }}
      toolchain_prefix: '/opt/toolchain'
      build_target: 'conan-docker-build'
      image_tag: ${{ matrix.image_tag }}
      docker_context: ${{ matrix.docker_context }}
      package_prefix: ${{ matrix.package_prefix }}
      container_registry: ${{ vars.NEXUS_REGISTRY }}
      container_username: ${{ vars.NEXUS_CI_USER }}
      container_push: ${{ inputs.container_push }}
      python_requirements: "demos/gcc-toolchain/conan-build-container/src/requirements.txt"
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      container_password: ${{ secrets.NEXUS_CI_PASSWORD }}
      install_keyring: ${{ secrets.NEXUS_APT_KEYRING }}
      install_ca: ${{ secrets.NEXUS_INTERNAL_CA }}
