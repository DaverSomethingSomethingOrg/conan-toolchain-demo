######################################################################
# ConanZFSDemo.yml
#
# Copyright Â© 2025 David L. Armstrong
#
# This workflow calls the conan-singlePlatform.yml workflow using a
# pre-allocated OpenZFS clone for our Conan Cache
#
# For more information see:
# - https://daversomethingsomethingorg.github.io/ConanToolchain/latest/ConanZFSDemo/
# - https://github.com/DaverSomethingSomethingOrg/conan-github-workflows
#

name: Conan ZFS Demo using ConanToolchain

on:
  workflow_dispatch:
    inputs:
      component_subdirectory:
        type: string
        default: "demos/ZFS-clone"
      promote_enabled:
        type: boolean
        default: true
      save_broken_build:
        type: boolean
        default: true

jobs:
  create_ZFS_clone:
    runs-on: 'linux-x86_64'
    outputs:
      ZFS_BUILD_CLONE: ${{ steps.create_ZFS_clone.outputs.ZFS_BUILD_CLONE }}
      ZFS_BRANCH_DATASET: ${{ steps.create_ZFS_clone.outputs.ZFS_BRANCH_DATASET }}
      ZFS_BUILD_SNAPSHOT: ${{ steps.create_ZFS_clone.outputs.ZFS_BUILD_SNAPSHOT }}
    steps:
    - name: Create ZFS clone
      id: create_ZFS_clone
      run: |
        set +e # Disable exit on error

        JOB_HOST="hephaestus"
        PROJECT="gcc12-toolchain"
        ZPOOL_NAME="zpool-conancache"

        # ZFS layout / structure
        ZFS_PROJECT_DATASET="${ZPOOL_NAME}/${PROJECT}"
        ZFS_BRANCH_DATASET="${ZFS_PROJECT_DATASET}/${GITHUB_REF_NAME}"
        ZFS_BUILD_CLONE="${ZFS_BRANCH_DATASET}_${JOB_HOST}-${GITHUB_RUN_ID}"
        ZFS_BUILD_SNAPSHOT="${ZFS_BRANCH_DATASET}@${JOB_HOST}-pre${GITHUB_RUN_ID}"

        echo "ZFS_BUILD_CLONE=${ZFS_BUILD_CLONE}" >> "$GITHUB_OUTPUT"
        echo "ZFS_BRANCH_DATASET=${ZFS_BRANCH_DATASET}" >> "$GITHUB_OUTPUT"
        echo "ZFS_BUILD_SNAPSHOT=${ZFS_BUILD_SNAPSHOT}" >> "$GITHUB_OUTPUT"
        
        # If our build clone already exists something is wrong..
        CLONE_FOUND=$(sudo zfs list -o name |grep "^${ZFS_BUILD_CLONE}\$")
        if [ $? -eq 0 ]; then
            echo "ERROR: Build clone already exists.  Cannot proceed!" 1>&2
            exit 1
        fi

        # Create our ZFS branch dataset if it doesn't already exist
        BRANCH_DATASET_FOUND=$(sudo zfs list -o name |grep "^${ZFS_BRANCH_DATASET}\$")
        if [ $? -eq 1 ]; then
            # Use '-p' to create branch dataset if it doesn't exist as well
            sudo zfs create -p "${ZFS_BRANCH_DATASET}"
        fi

        sudo zfs snapshot "${ZFS_BUILD_SNAPSHOT}"
        sudo zfs clone "${ZFS_BUILD_SNAPSHOT}" "${ZFS_BUILD_CLONE}"

  conan_toolchain:
    needs: create_ZFS_clone
    uses: DaverSomethingSomethingOrg/conan-github-workflows/.github/workflows/conan-toolchain.yml@main
    secrets: inherit
    with:
      conan_home_host_path: "/${{ needs.create_ZFS_clone.outputs.ZFS_BUILD_CLONE }}"
      runner_selection: 'linux-x86_64'
      component_subdirectory: "${{ inputs.component_subdirectory }}"
      conan_local_recipes: "conan-center-index"
      conan_local_repo: "http://nexus.homelab/repository/conan-homelab/"
      toolchain_prefix: "/opt/toolchain"
      container_image: "nexus.homelab/conan-build-ubuntu:x86_64-latest"
      is_enabled: true
      conan_deployer: 'deb_deployer'
      upload_packages: false

  cleanup_broken_build:
    if: ${{ always() && ! inputs.save_broken_build && needs.conan_toolchain.result == 'failure' }}
    needs: [create_ZFS_clone, conan_toolchain]
    runs-on: 'linux-x86_64'
    env:
      ZFS_BUILD_CLONE: ${{ needs.create_ZFS_clone.outputs.ZFS_BUILD_CLONE }}
      ZFS_BRANCH_DATASET: ${{ needs.create_ZFS_clone.outputs.ZFS_BRANCH_DATASET }}
      ZFS_BUILD_SNAPSHOT: ${{ needs.create_ZFS_clone.outputs.ZFS_BUILD_SNAPSHOT }}
    steps:
    - name: Create ZFS clone
      id: create_ZFS_clone
      run: |
        set +e # Disable exit on error
        sudo zfs destroy "${ZFS_BRANCH_DATASET}-legacy"
        sudo zfs destroy "${ZFS_BUILD_SNAPSHOT}"

  promote_ZFS_clone:
    if: ${{ inputs.promote_enabled }}
    needs: [create_ZFS_clone, conan_toolchain]
    runs-on: 'linux-x86_64'
    env:
      ZFS_BUILD_CLONE: ${{ needs.create_ZFS_clone.outputs.ZFS_BUILD_CLONE }}
      ZFS_BRANCH_DATASET: ${{ needs.create_ZFS_clone.outputs.ZFS_BRANCH_DATASET }}
      ZFS_BUILD_SNAPSHOT: ${{ needs.create_ZFS_clone.outputs.ZFS_BUILD_SNAPSHOT }}
    steps:
    - name: Create ZFS clone
      id: create_ZFS_clone
      run: |
        set +e # Disable exit on error
        sudo zfs promote "${ZFS_BUILD_CLONE}"
        sudo zfs rename "${ZFS_BRANCH_DATASET}" "${ZFS_BRANCH_DATASET}-legacy"
        sudo zfs rename "${ZFS_BUILD_CLONE}" "${ZFS_BRANCH_DATASET}"
        sudo zfs destroy "${ZFS_BRANCH_DATASET}-legacy"
        sudo zfs destroy "${ZFS_BUILD_SNAPSHOT}"
